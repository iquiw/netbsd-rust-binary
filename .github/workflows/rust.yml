name: Rust

on:
  push:
    tags:
     - '*'

jobs:
  build:
    name: Build Rust
    runs-on: ubuntu-latest
    container: iquiw/cross-netbsd:i386
    env:
      RUST_VERSION: 1.59.0
    steps:
      - name: Checkout rust
        uses: actions/checkout@v2
        with:
          repository: rust-lang/rust
          ref: ${{ env.RUST_VERSION }}
          submodules: true

      - name: Build
        run: |
          curl -sLO https://github.com/iquiw/cross-rust-llvm/releases/download/$RUST_VERSION/llvm-i686-unknown-netbsd.txz
          curl -sLO https://github.com/iquiw/cross-rust-llvm/releases/download/$RUST_VERSION/llvm-x86_64-unknown-linux-gnu.txz

          tar xJf llvm-i686-unknown-netbsd.txz
          (cd build/i686-unknown-netbsd/llvm/build && ln -s ../include ../lib .)
          rm -f llvm-i686-unknown-netbsd.txz

          tar xJf llvm-x86_64-unknown-linux-gnu.txz
          (cd build/x86_64-unknown-linux-gnu/llvm/build && ln -s ../include ../lib .)
          rm -f llvm-x86_64-unknown-linux-gnu.txz

          ./configure --host $HOSTS --target $HOSTS --release-channel=stable --enable-extended --disable-dist-src --disable-docs --disable-compiler-docs --set=build.verbose=2

          python3 x.py dist
          python3 x.py dist cargo
        env:
          HOSTS: i686-unknown-netbsd

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/dist/rust-${{ env.RUST_VERSION }}-i686-unknown-netbsd.tar.xz"
          artifactContentType: application/octet-stream
          name: Rust ${{ env.RUST_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
